% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/WhatsAppParser.R
\name{WhatsAppParse}
\alias{WhatsAppParse}
\title{Parsing exported WhatsApp Textfiles as Dataframes}
\usage{
WhatsAppParse(name, emoticons = "text", smilies = 1, anon = FALSE,
  emoDesc = TRUE, media = FALSE, web = "domain")
}
\arguments{
\item{name}{the name of the exported Whatsapp textfile to be parsed as a character string}

\item{emoticons}{"text" or "uni" replace Emojis with a textual description or Unicode respectively}

\item{smilies}{1 uses \code{\link[qdabRegex]{ex_emoticon}} to extract smilies, 2 uses a more inclusive custom list
of smilies containing all mentions from \link{https://de.wiktionary.org/w/index.php?title=Verzeichnis:International/Smileys}
and manually added ones}

\item{anon}{TRUE results in the vector of sender names bein anonimized, FALSE displays the actual names}

\item{emoDesc}{TRUE adds a textual identifier around replaced Emojis}

\item{media}{TRUE will extract filenames from messages including mediafiles}

\item{web}{"domain" will shorten sent links to domains}
}
\value{
A dataframe containing:
     1) A timestamp of when the message was sent
     2) The name of the sender (can be anonymized)
     3) The body of the message. Linebreaks and Emojis are replaced with textual indicators
     4) A list of Emojis contained in the message
     5) A list of ASCII smilies contained in the message
     6) An indicator stating whether media files were included in the message
     7) A list of domains from sent links contained in the message
     8) A lowercase list of words contained in the message with removed punctuation, numbers, Emojis and single characters
}
\description{
Creates a dataframe from an exported WhatsApp textfile containing one row per message
}
\examples{
 Df <- WhatsAppParse(system.file("Example.txt", package = "WhatsR"),web = "url", media = TRUE)
 View(Df)
}
